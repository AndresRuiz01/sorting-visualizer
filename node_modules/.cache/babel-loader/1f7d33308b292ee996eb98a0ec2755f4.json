{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js\";\n// import SortingGrid from './SortingGrid'\nimport './sortingVisualizer.css';\nimport { RangeStepInput } from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport getBubbleSortAnimations from './sorting_algorithms/bubble_sort';\nimport './App.css'; // import { wait } from '@testing-library/dom';\n// function bubbleSort(arr) {\n//     var i, j;\n//     var len = arr.length;\n//     var isSwapped = false;\n//     for(i =0; i < len; i++){\n//       isSwapped = false;\n//       for(j = 0; j < len; j++){ \n//           if (arr[j+1] === undefined) {\n//               continue;\n//           }\n//           if(arr[j].props.element_height > arr[j + 1].props.element_height){\n//             var temp = arr[j]\n//             arr[j] = arr[j+1];\n//             arr[j+1] = temp;\n//             isSwapped = true;\n//           }\n//       }\n//       // IF no two elements were swapped by inner loop, then break \n//       if(!isSwapped){\n//         break;\n//       }\n//     }\n//     // Print the array\n//     return(arr);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      starting_array: [],\n      slider: 50\n    }; // this.generateNewArray = this.generateNewArray.bind(this);\n    // this.handleClearBoard = this.handleClearBoard.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  onChange(e) {\n    const newVal = e.target.value;\n    this.setState({\n      slider: newVal\n    }, () => {\n      this.generateNewArray();\n    });\n  }\n\n  getRandomInt() {\n    const min = 30;\n    const max = 500;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  generateNewArray() {\n    var new_array = [];\n\n    for (var i = 0; i < this.state.slider; i++) {\n      var height = this.getRandomInt();\n      new_array.push( /*#__PURE__*/_jsxDEV(GridElement, {\n        element_height: height\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this));\n    }\n\n    this.setState({\n      array: new_array\n    });\n    this.setState({\n      starting_array: new_array\n    }); // this.setState({array}, () => {console.log(this.state.array);});\n  }\n\n  printHeights(array_print) {\n    var num_array = [];\n\n    for (let i = 0; i < array_print.length; i++) {\n      num_array.push(array_print[i].props.element_height);\n    }\n\n    console.log(num_array);\n  }\n\n  getElementHeight(element) {\n    return element.props.element_height;\n  }\n\n  sortElements() {\n    var animations = getBubbleSortAnimations(this.state.array.slice());\n    var temp_array = this.state.array.slice();\n\n    for (let i = 0; i < animations.length; i++) {\n      setTimeout(() => {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        var temp = temp_array[barOneIdx];\n        temp_array[barOneIdx] = temp_array[barTwoIdx];\n        temp_array[barTwoIdx] = temp; // console.log(\"Swapping:\", barOneIdx, barTwoIdx); \n        // this.setState({array: array})\n        // this.setState({array: temp_array}, () => {this.printHeights(this.state.array)});\n\n        this.setState({\n          array: temp_array\n        });\n      }, i * 50);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: \"Sorting Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element-size\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(RangeStepInput, {\n              min: 5,\n              max: 100,\n              value: this.slider,\n              step: 1,\n              onChange: this.onChange.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 31\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.sortElements.bind(this),\n            children: \" Sort! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: \"Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.generateNewArray.bind(this),\n            children: \" New Array \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-grid\",\n        children: this.state.array\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SortingVisualizer;","map":{"version":3,"sources":["/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js"],"names":["RangeStepInput","React","GridElement","getBubbleSortAnimations","SortingVisualizer","Component","constructor","props","state","array","starting_array","slider","componentDidMount","generateNewArray","onChange","e","newVal","target","value","setState","getRandomInt","min","max","Math","floor","random","new_array","i","height","push","printHeights","array_print","num_array","length","element_height","console","log","getElementHeight","element","sortElements","animations","slice","temp_array","setTimeout","barOneIdx","barTwoIdx","temp","render","bind"],"mappings":"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","sourcesContent":["// import SortingGrid from './SortingGrid'\nimport './sortingVisualizer.css';\nimport {RangeStepInput} from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport getBubbleSortAnimations from './sorting_algorithms/bubble_sort';\n\nimport './App.css';\n// import { wait } from '@testing-library/dom';\n\n\n\n// function bubbleSort(arr) {\n//     var i, j;\n//     var len = arr.length;\n      \n//     var isSwapped = false;\n      \n//     for(i =0; i < len; i++){\n        \n//       isSwapped = false;\n        \n//       for(j = 0; j < len; j++){ \n//           if (arr[j+1] === undefined) {\n//               continue;\n//           }\n//           if(arr[j].props.element_height > arr[j + 1].props.element_height){\n//             var temp = arr[j]\n//             arr[j] = arr[j+1];\n//             arr[j+1] = temp;\n//             isSwapped = true;\n//           }\n//       }\n        \n//       // IF no two elements were swapped by inner loop, then break \n        \n//       if(!isSwapped){\n//         break;\n//       }\n//     }\n      \n//     // Print the array\n//     return(arr);\n// }\n\nclass SortingVisualizer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          array: [],\n          starting_array: [],\n          slider: 50,\n        }\n        // this.generateNewArray = this.generateNewArray.bind(this);\n        // this.handleClearBoard = this.handleClearBoard.bind(this);\n      }\n        \n    componentDidMount() {\n        this.generateNewArray();\n    }\n\n    onChange(e) {\n        const newVal = e.target.value;\n        this.setState({slider: newVal}, () => {this.generateNewArray();});\n    }\n\n    getRandomInt() {\n        const min = 30;\n        const max = 500;\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    generateNewArray() {\n        var new_array = [];\n        for (var i = 0; i < this.state.slider; i++) {\n            var height = this.getRandomInt();\n            new_array.push(<GridElement key={i} element_height={height}/>)\n        }\n        this.setState({array: new_array});\n        this.setState({starting_array: new_array});\n        // this.setState({array}, () => {console.log(this.state.array);});\n\n    }\n\n    printHeights(array_print) {\n        var num_array = [];\n        for(let i = 0; i < array_print.length; i++) {\n            num_array.push(array_print[i].props.element_height);\n        }\n        console.log(num_array);\n    }\n\n    getElementHeight(element) {\n        return element.props.element_height;\n    }\n    \n\n    sortElements() {\n        var animations = getBubbleSortAnimations(this.state.array.slice());\n        var temp_array = this.state.array.slice();\n        for (let i = 0; i < animations.length; i++) {\n            setTimeout(() => {\n\n                const [barOneIdx, barTwoIdx] = animations[i];\n                var temp = temp_array[barOneIdx]\n                temp_array[barOneIdx] = temp_array[barTwoIdx];\n                temp_array[barTwoIdx] = temp;\n                // console.log(\"Swapping:\", barOneIdx, barTwoIdx); \n\n                // this.setState({array: array})\n                // this.setState({array: temp_array}, () => {this.printHeights(this.state.array)});\n                this.setState({array: temp_array});\n            }, i * 50);\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <span className=\"header-title\">\n                        Sorting Visualizer\n                    </span>\n                    <span className=\"header-element-size\">\n                        <div> Size</div>\n                        <div> <RangeStepInput \n                        min={5} max={100}\n                        value={this.slider} step={1}\n                        onChange={this.onChange.bind(this)}\n                        /> </div>\n                    </span>\n                    <span className=\"header-element\">\n                        <button className=\"sort-button\" onClick={this.sortElements.bind(this)}> Sort! </button>\n                    </span>\n                    <span className=\"header-element\">\n                        Algorithm\n                    </span>\n                    <span className=\"header-element\">\n                    <button className=\"sort-button\" onClick={this.generateNewArray.bind(this)}> New Array </button>\n                    </span>\n                </header>\n                <div className=\"sorting-grid\">\n                    {this.state.array}\n                </div>\n            </div>\n    \n        );\n    }\n}\n\nexport default SortingVisualizer;"]},"metadata":{},"sourceType":"module"}