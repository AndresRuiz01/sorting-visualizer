{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/SortingGrid.js\";\nimport './SortingGrid.css';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomInt() {\n  const min = 25;\n  const max = 300;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction bubbleSort(arr) {\n  var i, j;\n  var len = arr.length;\n  var isSwapped = false;\n\n  for (i = 0; i < len; i++) {\n    isSwapped = false;\n\n    for (j = 0; j < len; j++) {\n      if (arr[j] > arr[j + 1]) {\n        var temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n        isSwapped = true;\n      }\n    } // IF no two elements were swapped by inner loop, then break \n\n\n    if (!isSwapped) {\n      break;\n    }\n  } // Print the array\n\n\n  console.log(arr);\n}\n\nfunction SortingGrid() {\n  var array = [];\n\n  for (var i = 0; i < 20; i++) {\n    var height = getRandomInt();\n    array.push( /*#__PURE__*/_jsxDEV(GridElement, {\n      element_height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this));\n  }\n\n  var sorted_array = bubbleSort(array);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorting-grid\",\n    children: sorted_array\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n_c = SortingGrid;\nexport default SortingGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingGrid\");","map":{"version":3,"sources":["/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/SortingGrid.js"],"names":["React","GridElement","getRandomInt","min","max","Math","floor","random","bubbleSort","arr","i","j","len","length","isSwapped","temp","console","log","SortingGrid","array","height","push","sorted_array"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,YAAT,GAAwB;AACpB,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,GAAG,GAAG,GAAZ;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AAED,SAASK,UAAT,CAAoBC,GAApB,EAAwB;AAEpB,MAAIC,CAAJ,EAAOC,CAAP;AACA,MAAIC,GAAG,GAAGH,GAAG,CAACI,MAAd;AAEA,MAAIC,SAAS,GAAG,KAAhB;;AAEA,OAAIJ,CAAC,GAAE,CAAP,EAAUA,CAAC,GAAGE,GAAd,EAAmBF,CAAC,EAApB,EAAuB;AAErBI,IAAAA,SAAS,GAAG,KAAZ;;AAEA,SAAIH,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGC,GAAf,EAAoBD,CAAC,EAArB,EAAwB;AACpB,UAAGF,GAAG,CAACE,CAAD,CAAH,GAASF,GAAG,CAACE,CAAC,GAAG,CAAL,CAAf,EAAuB;AACrB,YAAII,IAAI,GAAGN,GAAG,CAACE,CAAD,CAAd;AACAF,QAAAA,GAAG,CAACE,CAAD,CAAH,GAASF,GAAG,CAACE,CAAC,GAAC,CAAH,CAAZ;AACAF,QAAAA,GAAG,CAACE,CAAC,GAAC,CAAH,CAAH,GAAWI,IAAX;AACAD,QAAAA,SAAS,GAAG,IAAZ;AACD;AACJ,KAXoB,CAarB;;;AAEA,QAAG,CAACA,SAAJ,EAAc;AACZ;AACD;AACF,GAzBmB,CA2BpB;;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACH;;AAGD,SAASS,WAAT,GAAuB;AACnB,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIU,MAAM,GAAGlB,YAAY,EAAzB;AACAiB,IAAAA,KAAK,CAACE,IAAN,eAAW,QAAC,WAAD;AAAa,MAAA,cAAc,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AAED,MAAIE,YAAY,GAAGd,UAAU,CAACW,KAAD,CAA7B;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACEG;AADF;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;KAZQJ,W;AAcT,eAAeA,WAAf","sourcesContent":["import './SortingGrid.css';\nimport React from 'react';\nimport GridElement from './GridElement'\n\nfunction getRandomInt() {\n    const min = 25;\n    const max = 300;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction bubbleSort(arr){\n    \n    var i, j;\n    var len = arr.length;\n      \n    var isSwapped = false;\n      \n    for(i =0; i < len; i++){\n        \n      isSwapped = false;\n        \n      for(j = 0; j < len; j++){\n          if(arr[j] > arr[j + 1]){\n            var temp = arr[j]\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n            isSwapped = true;\n          }\n      }\n        \n      // IF no two elements were swapped by inner loop, then break \n        \n      if(!isSwapped){\n        break;\n      }\n    }\n      \n    // Print the array\n    console.log(arr)\n}\n    \n\nfunction SortingGrid() {\n    var array = [];\n    for (var i = 0; i < 20; i++) {\n        var height = getRandomInt();\n        array.push(<GridElement element_height={height}/>)\n    }\n\n    var sorted_array = bubbleSort(array);\n\n    return <div className=\"sorting-grid\">\n            {sorted_array}\n           </div>\n}\n\nexport default SortingGrid;"]},"metadata":{},"sourceType":"module"}