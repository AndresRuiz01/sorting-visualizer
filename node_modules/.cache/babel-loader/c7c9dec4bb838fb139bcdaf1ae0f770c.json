{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js\";\nimport './sortingVisualizer.css';\nimport { RangeStepInput } from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport getBubbleSortAnimations from './sorting_algorithms/bubble_sort';\nimport getBogoSortAnimations from './sorting_algorithms/bogo_sort';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dropdownStyles = makeStyles({\n  root: {\n    boxShadow: \"none\",\n    border: \"0px solid rgba(0,0,0,0)\",\n    \"&::before\": {\n      borderBottom: \"0 solid rgba(0,0,0,0)\"\n    },\n    \"&:hover\": {\n      borderBottom: \"0 solid rgba(0,0,0,0)\"\n    },\n    \"&::after\": {\n      borderBottom: \"0 solid rgba(0,0,0,0)\"\n    }\n  }\n});\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateAlgorithm = event => {\n      this.setState({\n        algorithm: event.target.value\n      });\n    };\n\n    this.state = {\n      array: [],\n      starting_array: [],\n      size: 50,\n      speed: 50,\n      algorithm: 'Bubble Sort'\n    };\n  }\n\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  onSizeChange(e) {\n    const newVal = e.target.value;\n    this.setState({\n      size: newVal\n    }, () => {\n      this.generateNewArray();\n    });\n  }\n\n  onSpeedChange(e) {\n    const newVal = e.target.value;\n    this.setState({\n      speed: newVal\n    });\n  }\n\n  getRandomInt() {\n    const min = 30;\n    const max = 500;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  generateNewArray() {\n    var new_array = [];\n\n    for (var i = 0; i < this.state.size; i++) {\n      var height = this.getRandomInt();\n      new_array.push( /*#__PURE__*/_jsxDEV(GridElement, {\n        className: \"grid-element\",\n        element_height: height,\n        style: {\n          backgroundColor: \"#282c34\"\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 28\n      }, this));\n    }\n\n    this.setState({\n      array: new_array\n    });\n    this.setState({\n      starting_array: new_array\n    });\n  }\n\n  printHeights(array_print) {\n    var num_array = [];\n\n    for (let i = 0; i < array_print.length; i++) {\n      num_array.push(array_print[i].props.element_height);\n    }\n\n    console.log(num_array);\n  }\n\n  getElementHeight(element) {\n    return element.props.element_height;\n  }\n\n  sortElements() {\n    var animations = getBubbleSortAnimations(this.state.array.slice());\n    var temp_array = this.state.array.slice();\n\n    for (let i = 0; i < animations.length; i++) {\n      const gridElements = document.getElementsByClassName('grid-element');\n      setTimeout(() => {\n        const [animation_type, barOneIdx, barTwoIdx] = animations[i];\n        const barOne = temp_array[barOneIdx];\n        const barTwo = temp_array[barOneIdx];\n\n        if (animation_type === \"check\") {\n          gridElements[barOneIdx].style.backgroundColor = \"green\";\n          gridElements[barTwoIdx].style.backgroundColor = \"green\"; // barOne.props.style.backgroundColor = \"#ffffff\";\n          // barTwo.props.style.backgroundColor = \"#ffffff\";\n          // console.log(barOne);\n        }\n\n        if (animation_type === \"uncheck\") {\n          gridElements[barOneIdx].style.backgroundColor = \"#282c34\";\n          gridElements[barTwoIdx].style.backgroundColor = \"#282c34\";\n        }\n\n        if (animation_type === \"swap-wrong\") {\n          gridElements[barOneIdx].style.backgroundColor = \"red\";\n          gridElements[barTwoIdx].style.backgroundColor = \"red\";\n        }\n\n        if (animation_type === \"swap-right\") {\n          var temp = temp_array[barOneIdx];\n          temp_array[barOneIdx] = temp_array[barTwoIdx];\n          temp_array[barTwoIdx] = temp;\n        }\n\n        this.setState({\n          array: temp_array\n        });\n      }, i * this.state.speed);\n    }\n  }\n\n  render() {\n    // const dropDownStyles = dropdownStyles();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: \"Sorting Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sliders\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-title\",\n              children: \" Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(RangeStepInput, {\n                min: 5,\n                max: 100,\n                value: this.size,\n                step: 1,\n                onChange: this.onSizeChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 35\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-title\",\n              children: \" Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(RangeStepInput, {\n                min: 5,\n                max: 500,\n                value: this.speed,\n                step: 1,\n                onChange: this.onSpeedChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 35\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sort-button\",\n              onClick: this.generateNewArray.bind(this),\n              children: \" New Array \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sort-button\",\n              onClick: this.sortElements.bind(this),\n              children: \" Sort! \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            className: \"algorithm-select\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              variant: \"standard\",\n              sx: {\n                m: 1,\n                minWidth: 150\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: this.state.algorithm,\n              onChange: this.updateAlgorithm,\n              label: \"Age\" // classes={{\n              //     root: theme.whiteColor,\n              //     icon: classes.whiteColor\n              //   }} \n              ,\n              disableUnderline: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Bubble Sort\",\n                children: \"Bubble Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Quick Sort\",\n                children: \"Quick Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Heap Sort\",\n                children: \"Heap Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-grid\",\n        children: this.state.array\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SortingVisualizer;","map":{"version":3,"sources":["/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js"],"names":["RangeStepInput","React","GridElement","InputLabel","MenuItem","FormControl","Select","makeStyles","getBubbleSortAnimations","getBogoSortAnimations","dropdownStyles","root","boxShadow","border","borderBottom","SortingVisualizer","Component","constructor","props","updateAlgorithm","event","setState","algorithm","target","value","state","array","starting_array","size","speed","componentDidMount","generateNewArray","onSizeChange","e","newVal","onSpeedChange","getRandomInt","min","max","Math","floor","random","new_array","i","height","push","backgroundColor","printHeights","array_print","num_array","length","element_height","console","log","getElementHeight","element","sortElements","animations","slice","temp_array","gridElements","document","getElementsByClassName","setTimeout","animation_type","barOneIdx","barTwoIdx","barOne","barTwo","style","temp","render","bind","m","minWidth"],"mappings":"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","sourcesContent":["import './sortingVisualizer.css';\nimport {RangeStepInput} from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nimport getBubbleSortAnimations from './sorting_algorithms/bubble_sort';\nimport getBogoSortAnimations from './sorting_algorithms/bogo_sort';\n\nimport './App.css';\n\nconst dropdownStyles = makeStyles({\n    root: {\n      boxShadow: \"none\",\n      border: \"0px solid rgba(0,0,0,0)\",\n      \"&::before\": {\n        borderBottom: \"0 solid rgba(0,0,0,0)\"\n      },\n  \n      \"&:hover\": {\n        borderBottom: \"0 solid rgba(0,0,0,0)\"\n      },\n      \"&::after\": {\n        borderBottom: \"0 solid rgba(0,0,0,0)\"\n      }\n    }\n});\n\nclass SortingVisualizer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          array: [],\n          starting_array: [],\n          size: 50,\n          speed: 50,\n          algorithm: 'Bubble Sort',\n        }\n      }\n    \n    componentDidMount() {\n        this.generateNewArray();\n    }\n\n    onSizeChange(e) {\n        const newVal = e.target.value;\n        this.setState({size: newVal}, () => {this.generateNewArray();});\n    }\n\n    onSpeedChange(e) {\n        const newVal = e.target.value;\n        this.setState({speed: newVal});\n    }\n\n    getRandomInt() {\n        const min = 30;\n        const max = 500;\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    generateNewArray() {\n        var new_array = [];\n        for (var i = 0; i < this.state.size; i++) {\n            var height = this.getRandomInt();\n            new_array.push(<GridElement className=\"grid-element\" key={i} element_height={height} style={{backgroundColor: \"#282c34\"}} />);\n        }\n        this.setState({array: new_array});\n        this.setState({starting_array: new_array});\n\n    }\n\n    printHeights(array_print) {\n        var num_array = [];\n        for(let i = 0; i < array_print.length; i++) {\n            num_array.push(array_print[i].props.element_height);\n        }\n        console.log(num_array);\n    }\n\n    getElementHeight(element) {\n        return element.props.element_height;\n    }\n    \n\n    sortElements() {\n        var animations = getBubbleSortAnimations(this.state.array.slice());\n        var temp_array = this.state.array.slice();\n        for (let i = 0; i < animations.length; i++) {\n            const gridElements = document.getElementsByClassName('grid-element');\n            setTimeout(() => {\n                const [animation_type, barOneIdx, barTwoIdx] = animations[i];\n                const barOne = temp_array[barOneIdx];\n                const barTwo = temp_array[barOneIdx];\n                if (animation_type === \"check\") {\n                    gridElements[barOneIdx].style.backgroundColor = \"green\";\n                    gridElements[barTwoIdx].style.backgroundColor = \"green\";\n                    // barOne.props.style.backgroundColor = \"#ffffff\";\n                    // barTwo.props.style.backgroundColor = \"#ffffff\";\n                    // console.log(barOne);\n                }\n\n                if (animation_type === \"uncheck\") {\n                \n                    gridElements[barOneIdx].style.backgroundColor = \"#282c34\";\n                    gridElements[barTwoIdx].style.backgroundColor = \"#282c34\";\n                }\n\n\n                if (animation_type === \"swap-wrong\") {\n                    gridElements[barOneIdx].style.backgroundColor = \"red\";\n                    gridElements[barTwoIdx].style.backgroundColor = \"red\";\n                }\n\n                if (animation_type === \"swap-right\") {\n                    var temp = temp_array[barOneIdx]\n                    temp_array[barOneIdx] = temp_array[barTwoIdx];\n                    temp_array[barTwoIdx] = temp;\n                }\n                this.setState({array: temp_array});\n            }, i * this.state.speed);\n        }\n    }\n\n    updateAlgorithm = (event) => {\n        this.setState({algorithm: event.target.value});\n      };\n\n    render () {\n        // const dropDownStyles = dropdownStyles();\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <span className=\"header-title\">\n                        Sorting Visualizer\n                    </span>\n                    <div className=\"sliders\">\n                        <span className=\"slider-div\">\n                            <div className=\"slider-title\"> Size</div>\n                            <div> <RangeStepInput \n                            min={5} max={100}\n                            value={this.size} step={1}\n                            onChange={this.onSizeChange.bind(this)}\n                            /> </div>\n                        </span>\n                        <span className=\"slider-div\">\n                            <div className=\"slider-title\"> Speed</div>\n                            <div> <RangeStepInput \n                            min={5} max={500}\n                            value={this.speed} step={1}\n                            onChange={this.onSpeedChange.bind(this)}\n                            /> </div>\n                        </span>\n                    </div>\n                    <div className=\"header-buttons\">\n                        <div>\n                            <button className=\"sort-button\" onClick={this.generateNewArray.bind(this)}> New Array </button>\n                        </div>\n                        <div>\n                            <button className=\"sort-button\" onClick={this.sortElements.bind(this)}> Sort! </button>\n                        </div>\n                    </div>\n                    <span className=\"header-element\">\n                    <FormControl variant=\"standard\" className=\"algorithm-select\">\n                        <InputLabel variant=\"standard\" sx={{ m: 1, minWidth: 150 }}></InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={this.state.algorithm}\n                            onChange={this.updateAlgorithm}\n                            label=\"Age\"\n                            // classes={{\n                            //     root: theme.whiteColor,\n                            //     icon: classes.whiteColor\n                            //   }} \n                            disableUnderline\n                        >\n                        <MenuItem value={\"Bubble Sort\"}>Bubble Sort</MenuItem>\n                        <MenuItem value={\"Quick Sort\"}>Quick Sort</MenuItem>\n                        <MenuItem value={\"Heap Sort\"}>Heap Sort</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </span>\n                </header>\n                <div className=\"sorting-grid\">\n                    {this.state.array}\n                </div>\n            </div>\n    \n        );\n    }\n}\n\nexport default SortingVisualizer;"]},"metadata":{},"sourceType":"module"}