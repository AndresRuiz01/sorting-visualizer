{"ast":null,"code":"function swap(array,indexOne,indexTwo){var temp=array[indexOne];array[indexOne]=array[indexTwo];array[indexTwo]=temp;}function selectionSort(array){var i,j,min_idx;var animations=[];// One by one move boundary of unsorted subarray\nfor(i=0;i<array.length-1;i++){// Find the minimum element in unsorted array\nmin_idx=i;animations.push([\"check\",i,min_idx]);for(j=i+1;j<array.length;j++){if(array[j].props.value<array[min_idx].props.value){animations.push([\"uncheck-check\",min_idx,j]);min_idx=j;}else if(j+1===array.length){animations.push([\"uncheck-check\",j,min_idx]);}else{animations.push([\"uncheck-check\",j,j+1]);}}// Swap the found minimum element with the first element\nanimations.push([\"swap\",min_idx,i]);swap(array,min_idx,i);animations.push([\"uncheck\",i,i]);}return animations;}export default selectionSort;","map":{"version":3,"sources":["/Users/andres/Desktop/sorting-visualizer/src/sorting_algorithms/selectionSort.js"],"names":["swap","array","indexOne","indexTwo","temp","selectionSort","i","j","min_idx","animations","length","push","props","value"],"mappings":"AAAA,QAASA,CAAAA,IAAT,CAAcC,KAAd,CAAqBC,QAArB,CAA+BC,QAA/B,CAAwC,CACpC,GAAIC,CAAAA,IAAI,CAAGH,KAAK,CAACC,QAAD,CAAhB,CACAD,KAAK,CAACC,QAAD,CAAL,CAAkBD,KAAK,CAACE,QAAD,CAAvB,CACAF,KAAK,CAACE,QAAD,CAAL,CAAkBC,IAAlB,CACH,CAED,QAASC,CAAAA,aAAT,CAAuBJ,KAAvB,CAA8B,CAC1B,GAAIK,CAAAA,CAAJ,CAAOC,CAAP,CAAUC,OAAV,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA;AAEA,IAAKH,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGL,KAAK,CAACS,MAAN,CAAe,CAA/B,CAAkCJ,CAAC,EAAnC,CAAuC,CACnC;AACAE,OAAO,CAAGF,CAAV,CACAG,UAAU,CAACE,IAAX,CAAgB,CAAC,OAAD,CAAUL,CAAV,CAAaE,OAAb,CAAhB,EACA,IAAKD,CAAC,CAAGD,CAAC,CAAG,CAAb,CAAgBC,CAAC,CAAGN,KAAK,CAACS,MAA1B,CAAkCH,CAAC,EAAnC,CAAuC,CACnC,GAAIN,KAAK,CAACM,CAAD,CAAL,CAASK,KAAT,CAAeC,KAAf,CAAuBZ,KAAK,CAACO,OAAD,CAAL,CAAeI,KAAf,CAAqBC,KAAhD,CAAuD,CACnDJ,UAAU,CAACE,IAAX,CAAgB,CAAC,eAAD,CAAkBH,OAAlB,CAA2BD,CAA3B,CAAhB,EACAC,OAAO,CAAGD,CAAV,CACH,CAHD,IAGO,IAAKA,CAAC,CAAG,CAAL,GAAYN,KAAK,CAACS,MAAtB,CAA8B,CACjCD,UAAU,CAACE,IAAX,CAAgB,CAAC,eAAD,CAAkBJ,CAAlB,CAAqBC,OAArB,CAAhB,EACH,CAFM,IAEA,CACHC,UAAU,CAACE,IAAX,CAAgB,CAAC,eAAD,CAAkBJ,CAAlB,CAAqBA,CAAC,CAAC,CAAvB,CAAhB,EACH,CACJ,CACD;AACAE,UAAU,CAACE,IAAX,CAAgB,CAAC,MAAD,CAASH,OAAT,CAAkBF,CAAlB,CAAhB,EACAN,IAAI,CAACC,KAAD,CAAOO,OAAP,CAAgBF,CAAhB,CAAJ,CACAG,UAAU,CAACE,IAAX,CAAgB,CAAC,SAAD,CAAYL,CAAZ,CAAeA,CAAf,CAAhB,EACH,CACD,MAAOG,CAAAA,UAAP,CACH,CAED,cAAeJ,CAAAA,aAAf","sourcesContent":["function swap(array, indexOne, indexTwo){\n    var temp = array[indexOne];\n    array[indexOne] = array[indexTwo];\n    array[indexTwo] = temp;\n}\n \nfunction selectionSort(array) {\n    var i, j, min_idx;\n    var animations = [];\n    // One by one move boundary of unsorted subarray\n\n    for (i = 0; i < array.length - 1; i++) {\n        // Find the minimum element in unsorted array\n        min_idx = i;\n        animations.push([\"check\", i, min_idx]);\n        for (j = i + 1; j < array.length; j++) {\n            if (array[j].props.value < array[min_idx].props.value) {\n                animations.push([\"uncheck-check\", min_idx, j]);\n                min_idx = j;\n            } else if ((j + 1) === array.length) {\n                animations.push([\"uncheck-check\", j, min_idx]);\n            } else {\n                animations.push([\"uncheck-check\", j, j+1]);\n            }\n        }\n        // Swap the found minimum element with the first element\n        animations.push([\"swap\", min_idx, i]);\n        swap(array,min_idx, i);\n        animations.push([\"uncheck\", i, i]);\n    }\n    return animations;\n}\n\nexport default selectionSort;"]},"metadata":{},"sourceType":"module"}