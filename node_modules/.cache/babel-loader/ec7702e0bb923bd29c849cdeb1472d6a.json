{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js\";\nimport SortingGrid from './SortingGrid';\nimport { RangeStepInput } from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction myBubbleSort(array) {\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - i - 1; j++) {\n      if (array[j].props.element_height > array[j + 1].props.element_height) {\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n  }\n\n  return array;\n}\n\nfunction bubbleSort(arr) {\n  var i, j;\n  var len = arr.length;\n  var isSwapped = false;\n\n  for (i = 0; i < len; i++) {\n    isSwapped = false;\n\n    for (j = 0; j < len; j++) {\n      if (arr[j + 1] === undefined) {\n        continue;\n      }\n\n      if (arr[j].props.element_height > arr[j + 1].props.element_height) {\n        var temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n        isSwapped = true;\n      }\n    } // IF no two elements were swapped by inner loop, then break \n\n\n    if (!isSwapped) {\n      break;\n    }\n  } // Print the array\n\n\n  return arr;\n}\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      slider: 50\n    }; // this.generateNewArray = this.generateNewArray.bind(this);\n    // this.handleClearBoard = this.handleClearBoard.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  onChange(e) {\n    const newVal = e.target.value;\n    this.setState({\n      slider: newVal\n    }, () => {\n      this.generateNewArray();\n    });\n  }\n\n  getRandomInt() {\n    const min = 30;\n    const max = 500;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  generateNewArray() {\n    var array = [];\n\n    for (var i = 0; i < this.state.slider; i++) {\n      var height = this.getRandomInt();\n      array.push( /*#__PURE__*/_jsxDEV(GridElement, {\n        element_height: height\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }, this));\n    }\n\n    this.setState({\n      array\n    }, () => {\n      console.log(this.state.array);\n    });\n  }\n\n  sortElements() {\n    var sorted_array = myBubbleSort(this.state.array);\n    this.setState({\n      array: sorted_array\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: \"Sorting Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element-size\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(RangeStepInput, {\n              min: 5,\n              max: 100,\n              value: this.slider,\n              step: 1,\n              onChange: this.onChange.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 31\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.sortElements.bind(this),\n            children: \" Sort! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: \"Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.generateNewArray.bind(this),\n            children: \" New Array \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-grid\",\n        children: this.state.array\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SortingVisualizer;","map":{"version":3,"sources":["/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js"],"names":["SortingGrid","RangeStepInput","React","GridElement","myBubbleSort","array","i","length","j","props","element_height","temp","bubbleSort","arr","len","isSwapped","undefined","SortingVisualizer","Component","constructor","state","slider","componentDidMount","generateNewArray","onChange","e","newVal","target","value","setState","getRandomInt","min","max","Math","floor","random","height","push","console","log","sortElements","sorted_array","render","bind"],"mappings":"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","sourcesContent":["import SortingGrid from './SortingGrid'\nimport {RangeStepInput} from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\n\nimport './App.css';\n\nfunction myBubbleSort(array) {\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array.length - i - 1; j++) {\n            if( array[j].props.element_height > array[j + 1].props.element_height ) {\n                var temp = array[j]\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n        }\n    }\n    return array;\n}\n\n\nfunction bubbleSort(arr){\n    var i, j;\n    var len = arr.length;\n      \n    var isSwapped = false;\n      \n    for(i =0; i < len; i++){\n        \n      isSwapped = false;\n        \n      for(j = 0; j < len; j++){ \n          if (arr[j+1] === undefined) {\n              continue;\n          }\n          if(arr[j].props.element_height > arr[j + 1].props.element_height){\n            var temp = arr[j]\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n            isSwapped = true;\n          }\n      }\n        \n      // IF no two elements were swapped by inner loop, then break \n        \n      if(!isSwapped){\n        break;\n      }\n    }\n      \n    // Print the array\n    return(arr);\n}\n\nclass SortingVisualizer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          array: [],\n          slider: 50,\n        }\n        // this.generateNewArray = this.generateNewArray.bind(this);\n        // this.handleClearBoard = this.handleClearBoard.bind(this);\n      }\n        \n    componentDidMount() {\n        this.generateNewArray();\n    }\n\n    onChange(e) {\n        const newVal = e.target.value;\n        this.setState({slider: newVal}, () => {this.generateNewArray();});\n    }\n\n    getRandomInt() {\n        const min = 30;\n        const max = 500;\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    generateNewArray() {\n        var array = [];\n        for (var i = 0; i < this.state.slider; i++) {\n            var height = this.getRandomInt();\n            array.push(<GridElement key={i} element_height={height}/>)\n        }\n\n        this.setState({array}, () => {console.log(this.state.array);});\n\n    }\n\n    sortElements() {\n        var sorted_array = myBubbleSort(this.state.array);\n        this.setState({array: sorted_array});\n    }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <span className=\"header-title\">\n                        Sorting Visualizer\n                    </span>\n                    <span className=\"header-element-size\">\n                        <div> Size</div>\n                        <div> <RangeStepInput \n                        min={5} max={100}\n                        value={this.slider} step={1}\n                        onChange={this.onChange.bind(this)}\n                        /> </div>\n                    </span>\n                    <span className=\"header-element\">\n                        <button className=\"sort-button\" onClick={this.sortElements.bind(this)}> Sort! </button>\n                    </span>\n                    <span className=\"header-element\">\n                        Algorithm\n                    </span>\n                    <span className=\"header-element\">\n                    <button className=\"sort-button\" onClick={this.generateNewArray.bind(this)}> New Array </button>\n                    </span>\n                </header>\n                <div className=\"sorting-grid\">\n                    {this.state.array}\n                </div>\n            </div>\n    \n        );\n    }\n}\n\nexport default SortingVisualizer;"]},"metadata":{},"sourceType":"module"}