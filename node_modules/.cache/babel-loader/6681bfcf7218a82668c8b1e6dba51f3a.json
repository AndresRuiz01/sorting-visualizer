{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js\";\nimport SortingGrid from './SortingGrid';\nimport { RangeStepInput } from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport './App.css';\nimport { wait } from '@testing-library/dom'; // function bubbleSort(arr) {\n//     var i, j;\n//     var len = arr.length;\n//     var isSwapped = false;\n//     for(i =0; i < len; i++){\n//       isSwapped = false;\n//       for(j = 0; j < len; j++){ \n//           if (arr[j+1] === undefined) {\n//               continue;\n//           }\n//           if(arr[j].props.element_height > arr[j + 1].props.element_height){\n//             var temp = arr[j]\n//             arr[j] = arr[j+1];\n//             arr[j+1] = temp;\n//             isSwapped = true;\n//           }\n//       }\n//       // IF no two elements were swapped by inner loop, then break \n//       if(!isSwapped){\n//         break;\n//       }\n//     }\n//     // Print the array\n//     return(arr);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction myBubbleSort(array) {\n  const starting_array = array;\n  var animations = [];\n\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - i - 1; j++) {\n      // animations.push([j, j+1]);\n      // animations.push([j, j+1]);\n      if (array[j].props.element_height > array[j + 1].props.element_height) {\n        animations.push([j, j + 1]);\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n  }\n\n  return [starting_array, animations];\n}\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      slider: 50\n    }; // this.generateNewArray = this.generateNewArray.bind(this);\n    // this.handleClearBoard = this.handleClearBoard.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  onChange(e) {\n    const newVal = e.target.value;\n    this.setState({\n      slider: newVal\n    }, () => {\n      this.generateNewArray();\n    });\n  }\n\n  getRandomInt() {\n    const min = 30;\n    const max = 500;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  generateNewArray() {\n    var array = [];\n\n    for (var i = 0; i < this.state.slider; i++) {\n      var height = this.getRandomInt();\n      array.push( /*#__PURE__*/_jsxDEV(GridElement, {\n        element_height: height\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 24\n      }, this));\n    }\n\n    this.setState({\n      array\n    }); // this.setState({array}, () => {console.log(this.state.array);});\n  }\n\n  printHeights(array) {\n    var num_array = [];\n\n    for (let i = 0; i < array.length; i++) {\n      num_array.push(array[i].props.element_height);\n    }\n\n    console.log(num_array);\n  }\n\n  sortElements() {\n    var new_array = this.state.array;\n    var [starting_array, animations] = myBubbleSort(new_array); // console.log(animations);\n\n    var temp_array = starting_array;\n    console.log(\"STARTING ARRAY: \", this.printHeights(temp_array));\n    console.log(\"STARTING ARRAY: \", this.printHeights(starting_array));\n    console.log(\"STARTING ARRAY: \", this.printHeights(this.state.array));\n    console.log(\"STARTING ARRAY: \", this.printHeights(new_array)); // console.log(temp_array);\n\n    for (let i = 0; i < animations.length; i++) {\n      // const barOne = this.state.array[barOneIdx];\n      // const barTwo = this.state.array[barTwoIdx];\n      // console.log(barOne, barTwo);\n      // const barOneStyle = barTwo.style;\n      // const barTwoStyle = barTwo.style;\n      // console.log(barOneStyle, barTwoStyle);\n      // return;\n      setTimeout(() => {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        var temp = temp_array[barOneIdx];\n        temp_array[barOneIdx] = temp_array[barTwoIdx];\n        temp_array[barTwoIdx] = temp; // console.log(\"Swapping:\", barOneIdx, barTwoIdx); \n        // this.setState({array: array})\n        // this.setState({array: temp_array}, () => {this.printHeights(this.state.array)});\n\n        this.setState({\n          array: temp_array\n        });\n      }, i * 300);\n    } // this.printHeights(sorted_array);\n    //     const arrayBars = document.getElementsByClassName('array-bar');\n    //     const isColorChange = i % 3 !== 2;\n    //     if (isColorChange) {\n    //       const [barOneIdx, barTwoIdx] = animations[i];\n    //       const barOneStyle = arrayBars[barOneIdx].style;\n    //       const barTwoStyle = arrayBars[barTwoIdx].style;\n    //       const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n    //       setTimeout(() => {\n    //         barOneStyle.backgroundColor = color;\n    //         barTwoStyle.backgroundColor = color;\n    //       }, i * 3);\n    //     } else {\n    //       setTimeout(() => {\n    //         const [barOneIdx, newHeight] = animations[i];\n    //         const barOneStyle = arrayBars[barOneIdx].style;\n    //         barOneStyle.height = `${newHeight}px`;\n    //       }, i * 3);\n    //     }\n    //   }\n\n\n    console.log(\"TEST\"); // this.setState({array: starting_array});\n\n    this.setState({\n      array: starting_array\n    }, () => {\n      console.log(this.state.array);\n    }); // console.log(\"Final heights\");\n    // this.printHeights(this.state.array);\n    // this.setState({array: sorted_array}, () => {this.printHeights(this.state.array)});\n    // this.printHeights()\n    // console.log(animations)\n    // console.log(this.state.array);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: \"Sorting Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element-size\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(RangeStepInput, {\n              min: 5,\n              max: 100,\n              value: this.slider,\n              step: 1,\n              onChange: this.onChange.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 31\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.sortElements.bind(this),\n            children: \" Sort! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: \"Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.generateNewArray.bind(this),\n            children: \" New Array \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-grid\",\n        children: this.state.array\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SortingVisualizer;","map":{"version":3,"sources":["/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js"],"names":["SortingGrid","RangeStepInput","React","GridElement","wait","myBubbleSort","array","starting_array","animations","i","length","j","props","element_height","push","temp","SortingVisualizer","Component","constructor","state","slider","componentDidMount","generateNewArray","onChange","e","newVal","target","value","setState","getRandomInt","min","max","Math","floor","random","height","printHeights","num_array","console","log","sortElements","new_array","temp_array","setTimeout","barOneIdx","barTwoIdx","render","bind"],"mappings":"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","sourcesContent":["import SortingGrid from './SortingGrid'\nimport {RangeStepInput} from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\n\nimport './App.css';\nimport { wait } from '@testing-library/dom';\n\n\n\n// function bubbleSort(arr) {\n//     var i, j;\n//     var len = arr.length;\n      \n//     var isSwapped = false;\n      \n//     for(i =0; i < len; i++){\n        \n//       isSwapped = false;\n        \n//       for(j = 0; j < len; j++){ \n//           if (arr[j+1] === undefined) {\n//               continue;\n//           }\n//           if(arr[j].props.element_height > arr[j + 1].props.element_height){\n//             var temp = arr[j]\n//             arr[j] = arr[j+1];\n//             arr[j+1] = temp;\n//             isSwapped = true;\n//           }\n//       }\n        \n//       // IF no two elements were swapped by inner loop, then break \n        \n//       if(!isSwapped){\n//         break;\n//       }\n//     }\n      \n//     // Print the array\n//     return(arr);\n// }\n\nfunction myBubbleSort(array) {\n    const starting_array = array;\n    var animations = [];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0; j < array.length - i - 1; j++) {\n            // animations.push([j, j+1]);\n            // animations.push([j, j+1]);\n            if( array[j].props.element_height > array[j + 1].props.element_height ) {\n                animations.push([j, j+1]);\n                var temp = array[j]\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n        }\n    }\n    return [starting_array, animations];\n}\n\nclass SortingVisualizer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          array: [],\n          slider: 50,\n        }\n        // this.generateNewArray = this.generateNewArray.bind(this);\n        // this.handleClearBoard = this.handleClearBoard.bind(this);\n      }\n        \n    componentDidMount() {\n        this.generateNewArray();\n    }\n\n    onChange(e) {\n        const newVal = e.target.value;\n        this.setState({slider: newVal}, () => {this.generateNewArray();});\n    }\n\n    getRandomInt() {\n        const min = 30;\n        const max = 500;\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    generateNewArray() {\n        var array = [];\n        for (var i = 0; i < this.state.slider; i++) {\n            var height = this.getRandomInt();\n            array.push(<GridElement key={i} element_height={height}/>)\n        }\n        this.setState({array});\n        // this.setState({array}, () => {console.log(this.state.array);});\n\n    }\n\n    printHeights(array) {\n        var num_array = [];\n        for(let i = 0; i < array.length; i++) {\n            num_array.push(array[i].props.element_height);\n        }\n        console.log(num_array);\n    }\n\n    sortElements() {\n        var new_array = this.state.array;\n        var [starting_array, animations] = myBubbleSort(new_array);\n        // console.log(animations);\n        var temp_array = starting_array;\n        console.log(\"STARTING ARRAY: \", this.printHeights(temp_array));\n        console.log(\"STARTING ARRAY: \", this.printHeights(starting_array));\n        console.log(\"STARTING ARRAY: \", this.printHeights(this.state.array));\n        console.log(\"STARTING ARRAY: \", this.printHeights(new_array));\n        // console.log(temp_array);\n        for (let i = 0; i < animations.length; i++) {\n            // const barOne = this.state.array[barOneIdx];\n            // const barTwo = this.state.array[barTwoIdx];\n            // console.log(barOne, barTwo);\n            // const barOneStyle = barTwo.style;\n            // const barTwoStyle = barTwo.style;\n            // console.log(barOneStyle, barTwoStyle);\n            // return;\n            setTimeout(() => {\n                const [barOneIdx, barTwoIdx] = animations[i];\n                var temp = temp_array[barOneIdx]\n                temp_array[barOneIdx] = temp_array[barTwoIdx];\n                temp_array[barTwoIdx] = temp;\n                // console.log(\"Swapping:\", barOneIdx, barTwoIdx); \n\n                // this.setState({array: array})\n                // this.setState({array: temp_array}, () => {this.printHeights(this.state.array)});\n                this.setState({array: temp_array});\n            }, i * 300);\n        }\n        // this.printHeights(sorted_array);\n        //     const arrayBars = document.getElementsByClassName('array-bar');\n        //     const isColorChange = i % 3 !== 2;\n        //     if (isColorChange) {\n        //       const [barOneIdx, barTwoIdx] = animations[i];\n        //       const barOneStyle = arrayBars[barOneIdx].style;\n        //       const barTwoStyle = arrayBars[barTwoIdx].style;\n        //       const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        //       setTimeout(() => {\n        //         barOneStyle.backgroundColor = color;\n        //         barTwoStyle.backgroundColor = color;\n        //       }, i * 3);\n        //     } else {\n        //       setTimeout(() => {\n        //         const [barOneIdx, newHeight] = animations[i];\n        //         const barOneStyle = arrayBars[barOneIdx].style;\n        //         barOneStyle.height = `${newHeight}px`;\n        //       }, i * 3);\n        //     }\n        //   }\n        console.log(\"TEST\");\n        // this.setState({array: starting_array});\n        this.setState({array: starting_array}, () => {console.log(this.state.array)});\n        // console.log(\"Final heights\");\n        // this.printHeights(this.state.array);\n        // this.setState({array: sorted_array}, () => {this.printHeights(this.state.array)});\n        // this.printHeights()\n        // console.log(animations)\n        // console.log(this.state.array);\n    }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <span className=\"header-title\">\n                        Sorting Visualizer\n                    </span>\n                    <span className=\"header-element-size\">\n                        <div> Size</div>\n                        <div> <RangeStepInput \n                        min={5} max={100}\n                        value={this.slider} step={1}\n                        onChange={this.onChange.bind(this)}\n                        /> </div>\n                    </span>\n                    <span className=\"header-element\">\n                        <button className=\"sort-button\" onClick={this.sortElements.bind(this)}> Sort! </button>\n                    </span>\n                    <span className=\"header-element\">\n                        Algorithm\n                    </span>\n                    <span className=\"header-element\">\n                    <button className=\"sort-button\" onClick={this.generateNewArray.bind(this)}> New Array </button>\n                    </span>\n                </header>\n                <div className=\"sorting-grid\">\n                    {this.state.array}\n                </div>\n            </div>\n    \n        );\n    }\n}\n\nexport default SortingVisualizer;"]},"metadata":{},"sourceType":"module"}