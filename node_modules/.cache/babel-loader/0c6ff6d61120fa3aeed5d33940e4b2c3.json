{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js\";\nimport './sortingVisualizer.css';\nimport { RangeStepInput } from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport getBubbleSortAnimations from './sorting_algorithms/bubble_sort';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      starting_array: [],\n      slider: 50\n    };\n  }\n\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  onChange(e) {\n    const newVal = e.target.value;\n    this.setState({\n      slider: newVal\n    }, () => {\n      this.generateNewArray();\n    });\n  }\n\n  getRandomInt() {\n    const min = 30;\n    const max = 500;\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  generateNewArray() {\n    var new_array = [];\n\n    for (var i = 0; i < this.state.slider; i++) {\n      var height = this.getRandomInt();\n      new_array.push( /*#__PURE__*/_jsxDEV(GridElement, {\n        className: \"grid-element\",\n        element_height: height,\n        style: {\n          backgroundColor: \"#282c34\"\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this));\n    }\n\n    this.setState({\n      array: new_array\n    });\n    this.setState({\n      starting_array: new_array\n    });\n  }\n\n  printHeights(array_print) {\n    var num_array = [];\n\n    for (let i = 0; i < array_print.length; i++) {\n      num_array.push(array_print[i].props.element_height);\n    }\n\n    console.log(num_array);\n  }\n\n  getElementHeight(element) {\n    return element.props.element_height;\n  }\n\n  sortElements() {\n    var animations = getBubbleSortAnimations(this.state.array.slice());\n    var temp_array = this.state.array.slice();\n\n    for (let i = 0; i < animations.length; i++) {\n      const gridElements = document.getElementsByClassName('grid-element');\n      setTimeout(() => {\n        const [animation_type, barOneIdx, barTwoIdx] = animations[i];\n        const barOne = temp_array[barOneIdx];\n        const barTwo = temp_array[barOneIdx];\n\n        if (animation_type === \"check\") {\n          gridElements[barOneIdx].style.backgroundColor = \"green\";\n          gridElements[barTwoIdx].style.backgroundColor = \"green\"; // barOne.props.style.backgroundColor = \"#ffffff\";\n          // barTwo.props.style.backgroundColor = \"#ffffff\";\n          // console.log(barOne);\n        }\n\n        if (animation_type === \"uncheck\") {\n          gridElements[barOneIdx].style.backgroundColor = \"#282c34\";\n          gridElements[barTwoIdx].style.backgroundColor = \"#282c34\";\n        }\n\n        if (animation_type === \"swap-wrong\") {\n          gridElements[barOneIdx].style.backgroundColor = \"red\";\n          gridElements[barTwoIdx].style.backgroundColor = \"red\";\n        }\n\n        if (animation_type === \"swap-right\") {\n          var temp = temp_array[barOneIdx];\n          temp_array[barOneIdx] = temp_array[barTwoIdx];\n          temp_array[barTwoIdx] = temp;\n        }\n\n        this.setState({\n          array: temp_array\n        });\n      }, i * 10);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: \"Sorting Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element-size\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(RangeStepInput, {\n              min: 5,\n              max: 100,\n              value: this.slider,\n              step: 1,\n              onChange: this.onChange.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 31\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.sortElements.bind(this),\n            children: \" Sort! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: \"Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: this.generateNewArray.bind(this),\n            children: \" New Array \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-grid\",\n        children: this.state.array\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SortingVisualizer;","map":{"version":3,"sources":["/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sortingVisualizer.js"],"names":["RangeStepInput","React","GridElement","getBubbleSortAnimations","SortingVisualizer","Component","constructor","props","state","array","starting_array","slider","componentDidMount","generateNewArray","onChange","e","newVal","target","value","setState","getRandomInt","min","max","Math","floor","random","new_array","i","height","push","backgroundColor","printHeights","array_print","num_array","length","element_height","console","log","getElementHeight","element","sortElements","animations","slice","temp_array","gridElements","document","getElementsByClassName","setTimeout","animation_type","barOneIdx","barTwoIdx","barOne","barTwo","style","temp","render","bind"],"mappings":"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","sourcesContent":["import './sortingVisualizer.css';\nimport {RangeStepInput} from 'react-range-step-input';\nimport React from 'react';\nimport GridElement from './GridElement';\nimport getBubbleSortAnimations from './sorting_algorithms/bubble_sort';\n\nimport './App.css';\n\n\nclass SortingVisualizer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          array: [],\n          starting_array: [],\n          slider: 50,\n        }\n      }\n        \n    componentDidMount() {\n        this.generateNewArray();\n    }\n\n    onChange(e) {\n        const newVal = e.target.value;\n        this.setState({slider: newVal}, () => {this.generateNewArray();});\n    }\n\n    getRandomInt() {\n        const min = 30;\n        const max = 500;\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    generateNewArray() {\n        var new_array = [];\n        for (var i = 0; i < this.state.slider; i++) {\n            var height = this.getRandomInt();\n            new_array.push(<GridElement className=\"grid-element\" key={i} element_height={height} style={{backgroundColor: \"#282c34\"}} />);\n        }\n        this.setState({array: new_array});\n        this.setState({starting_array: new_array});\n\n    }\n\n    printHeights(array_print) {\n        var num_array = [];\n        for(let i = 0; i < array_print.length; i++) {\n            num_array.push(array_print[i].props.element_height);\n        }\n        console.log(num_array);\n    }\n\n    getElementHeight(element) {\n        return element.props.element_height;\n    }\n    \n\n    sortElements() {\n        var animations = getBubbleSortAnimations(this.state.array.slice());\n        var temp_array = this.state.array.slice();\n        for (let i = 0; i < animations.length; i++) {\n            const gridElements = document.getElementsByClassName('grid-element');\n            setTimeout(() => {\n                const [animation_type, barOneIdx, barTwoIdx] = animations[i];\n                const barOne = temp_array[barOneIdx];\n                const barTwo = temp_array[barOneIdx];\n                if (animation_type === \"check\") {\n                    gridElements[barOneIdx].style.backgroundColor = \"green\";\n                    gridElements[barTwoIdx].style.backgroundColor = \"green\";\n                    // barOne.props.style.backgroundColor = \"#ffffff\";\n                    // barTwo.props.style.backgroundColor = \"#ffffff\";\n                    // console.log(barOne);\n                }\n\n                if (animation_type === \"uncheck\") {\n                \n                    gridElements[barOneIdx].style.backgroundColor = \"#282c34\";\n                    gridElements[barTwoIdx].style.backgroundColor = \"#282c34\";\n                }\n\n\n                if (animation_type === \"swap-wrong\") {\n                    gridElements[barOneIdx].style.backgroundColor = \"red\";\n                    gridElements[barTwoIdx].style.backgroundColor = \"red\";\n                }\n\n                if (animation_type === \"swap-right\") {\n                    var temp = temp_array[barOneIdx]\n                    temp_array[barOneIdx] = temp_array[barTwoIdx];\n                    temp_array[barTwoIdx] = temp;\n                }\n                this.setState({array: temp_array});\n            }, i * 10);\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <span className=\"header-title\">\n                        Sorting Visualizer\n                    </span>\n                    <span className=\"header-element-size\">\n                        <div> Size</div>\n                        <div> <RangeStepInput \n                        min={5} max={100}\n                        value={this.slider} step={1}\n                        onChange={this.onChange.bind(this)}\n                        /> </div>\n                    </span>\n                    <span className=\"header-element\">\n                        <button className=\"sort-button\" onClick={this.sortElements.bind(this)}> Sort! </button>\n                    </span>\n                    <span className=\"header-element\">\n                        Algorithm\n                    </span>\n                    <span className=\"header-element\">\n                    <button className=\"sort-button\" onClick={this.generateNewArray.bind(this)}> New Array </button>\n                    </span>\n                </header>\n                <div className=\"sorting-grid\">\n                    {this.state.array}\n                </div>\n            </div>\n    \n        );\n    }\n}\n\nexport default SortingVisualizer;"]},"metadata":{},"sourceType":"module"}