{"ast":null,"code":"function shuffle(array) {\n  array.sort(() => Math.random() - 0.5);\n  return array;\n}\n\nexport default function getBogoSortAnimations(array) {\n  var animations = [];\n  var shuffled_arrays = [];\n  shuffled_arrays.push(array.slice());\n  animations.push(\"shuffle\", -1, -1);\n  var notSorted = true;\n\n  while (notSorted) {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] > array[i + 1]) {\n        shuffle(array);\n        shuffled_arrays.push(array.slice());\n        animations.push(\"uncheckGroup\", 0, i + 1);\n        animations.push(\"shuffle\", -1, -1);\n        continue;\n      } else {\n        animations.push(\"check\", i, i + 1);\n      }\n    }\n\n    notSorted = false;\n  }\n\n  return animations;\n}","map":{"version":3,"sources":["/Users/andres/Desktop/personal_projects/learning-react/sorting-visualizer/src/sorting_algorithms/bogo_sort.js"],"names":["shuffle","array","sort","Math","random","getBogoSortAnimations","animations","shuffled_arrays","push","slice","notSorted","i","length"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpBA,EAAAA,KAAK,CAACC,IAAN,CAAW,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAjC;AACA,SAAOH,KAAP;AACH;;AAED,eAAe,SAASI,qBAAT,CAA+BJ,KAA/B,EAAsC;AACjD,MAAIK,UAAU,GAAG,EAAjB;AACA,MAAIC,eAAe,GAAG,EAAtB;AACAA,EAAAA,eAAe,CAACC,IAAhB,CAAqBP,KAAK,CAACQ,KAAN,EAArB;AACAH,EAAAA,UAAU,CAACE,IAAX,CAAgB,SAAhB,EAA2B,CAAC,CAA5B,EAA+B,CAAC,CAAhC;AACA,MAAIE,SAAS,GAAG,IAAhB;;AACA,SAAOA,SAAP,EAAkB;AACd,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,KAAK,CAACW,MAAN,GAAc,CAAjC,EAAoCD,CAAC,EAArC,EAAyC;AACrC,UAAIV,KAAK,CAACU,CAAD,CAAL,GAAWV,KAAK,CAACU,CAAC,GAAC,CAAH,CAApB,EAA2B;AACvBX,QAAAA,OAAO,CAACC,KAAD,CAAP;AACAM,QAAAA,eAAe,CAACC,IAAhB,CAAqBP,KAAK,CAACQ,KAAN,EAArB;AACAH,QAAAA,UAAU,CAACE,IAAX,CAAgB,cAAhB,EAAgC,CAAhC,EAAmCG,CAAC,GAAC,CAArC;AACAL,QAAAA,UAAU,CAACE,IAAX,CAAgB,SAAhB,EAA2B,CAAC,CAA5B,EAA+B,CAAC,CAAhC;AACA;AACH,OAND,MAMO;AACHF,QAAAA,UAAU,CAACE,IAAX,CAAgB,OAAhB,EAAyBG,CAAzB,EAA4BA,CAAC,GAAC,CAA9B;AACH;AACJ;;AACDD,IAAAA,SAAS,GAAG,KAAZ;AACH;;AACD,SAAOJ,UAAP;AACH","sourcesContent":["function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n    return array;\n}\n\nexport default function getBogoSortAnimations(array) {\n    var animations = [];\n    var shuffled_arrays = [];\n    shuffled_arrays.push(array.slice());\n    animations.push(\"shuffle\", -1, -1);\n    var notSorted = true;\n    while (notSorted) {\n        for(let i = 0; i < array.length -1; i++) {\n            if (array[i] > array[i+1]) {\n                shuffle(array);\n                shuffled_arrays.push(array.slice());\n                animations.push(\"uncheckGroup\", 0, i+1)\n                animations.push(\"shuffle\", -1, -1);\n                continue;\n            } else {\n                animations.push(\"check\", i, i+1);\n            }\n        }\n        notSorted = false;\n    }\n    return animations;\n}"]},"metadata":{},"sourceType":"module"}