{"ast":null,"code":"import _toConsumableArray from\"/Users/andres/Desktop/sorting-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";function merge(array,start,half,end){var animations=[];var leftPosition=start;var rightPosition=start+half+1;animations.push([\"check\",leftPosition,rightPosition]);while(rightPosition<=end&&leftPosition<rightPosition){if(array[leftPosition].props.value<=array[rightPosition].props.value){animations.push([\"uncheck-check\",leftPosition,leftPosition+1]);leftPosition++;}else{// Shift right and insert element\n// Grab element\nvar movedElement=array.splice(rightPosition,1);// Place in new position\narray.splice(leftPosition,0,movedElement[0]);// animations.push([\"swap-wrong\", leftPosition, leftPosition]);\nanimations.push(['shift',leftPosition,rightPosition]);if(rightPosition+1>end){animations.push([\"uncheck-check\",leftPosition,rightPosition]);}else{animations.push([\"uncheck-check\",leftPosition,rightPosition+1]);}leftPosition++;rightPosition++;}}animations.push([\"uncheck\",leftPosition,rightPosition-1]);return animations;}function mergeSort(array,startIndex,endIndex){var half=Math.floor((endIndex-startIndex)/2);if(endIndex-startIndex<1){return[];}var leftAnimations=mergeSort(array,startIndex,startIndex+half);var rightAnimations=mergeSort(array,startIndex+half+1,endIndex);var mergeAnimations=merge(array,startIndex,half,endIndex);return[].concat(_toConsumableArray(leftAnimations),_toConsumableArray(rightAnimations),_toConsumableArray(mergeAnimations));}export default mergeSort;","map":{"version":3,"sources":["/Users/andres/Desktop/sorting-visualizer/src/sorting_algorithms/mergeSort.js"],"names":["merge","array","start","half","end","animations","leftPosition","rightPosition","push","props","value","movedElement","splice","mergeSort","startIndex","endIndex","Math","floor","leftAnimations","rightAnimations","mergeAnimations"],"mappings":"uKAAA,QAASA,CAAAA,KAAT,CAAeC,KAAf,CAAsBC,KAAtB,CAA6BC,IAA7B,CAAmCC,GAAnC,CAAwC,CACpC,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,YAAY,CAAGJ,KAAnB,CACA,GAAIK,CAAAA,aAAa,CAAGL,KAAK,CAAGC,IAAR,CAAe,CAAnC,CACAE,UAAU,CAACG,IAAX,CAAgB,CAAC,OAAD,CAAUF,YAAV,CAAwBC,aAAxB,CAAhB,EACA,MAAOA,aAAa,EAAIH,GAAjB,EAAwBE,YAAY,CAAGC,aAA9C,CAA6D,CACzD,GAAIN,KAAK,CAACK,YAAD,CAAL,CAAoBG,KAApB,CAA0BC,KAA1B,EAAmCT,KAAK,CAACM,aAAD,CAAL,CAAqBE,KAArB,CAA2BC,KAAlE,CAAyE,CACrEL,UAAU,CAACG,IAAX,CAAgB,CAAC,eAAD,CAAkBF,YAAlB,CAAgCA,YAAY,CAAC,CAA7C,CAAhB,EACAA,YAAY,GACf,CAHD,IAGO,CACH;AACA;AACA,GAAMK,CAAAA,YAAY,CAAGV,KAAK,CAACW,MAAN,CAAaL,aAAb,CAA4B,CAA5B,CAArB,CACA;AACAN,KAAK,CAACW,MAAN,CAAaN,YAAb,CAA2B,CAA3B,CAA8BK,YAAY,CAAC,CAAD,CAA1C,EACA;AACAN,UAAU,CAACG,IAAX,CAAgB,CAAC,OAAD,CAAUF,YAAV,CAAwBC,aAAxB,CAAhB,EACA,GAAIA,aAAa,CAAC,CAAd,CAAkBH,GAAtB,CAA2B,CACvBC,UAAU,CAACG,IAAX,CAAgB,CAAC,eAAD,CAAkBF,YAAlB,CAAgCC,aAAhC,CAAhB,EACH,CAFD,IAEO,CACHF,UAAU,CAACG,IAAX,CAAgB,CAAC,eAAD,CAAkBF,YAAlB,CAAgCC,aAAa,CAAC,CAA9C,CAAhB,EACH,CACDD,YAAY,GACZC,aAAa,GAChB,CACJ,CACDF,UAAU,CAACG,IAAX,CAAgB,CAAC,SAAD,CAAYF,YAAZ,CAA0BC,aAAa,CAAC,CAAxC,CAAhB,EACA,MAAOF,CAAAA,UAAP,CACH,CAED,QAASQ,CAAAA,SAAT,CAAmBZ,KAAnB,CAA0Ba,UAA1B,CAAsCC,QAAtC,CAAgD,CAC5C,GAAMZ,CAAAA,IAAI,CAAGa,IAAI,CAACC,KAAL,CAAW,CAACF,QAAQ,CAAGD,UAAZ,EAA0B,CAArC,CAAb,CAEA,GAAKC,QAAQ,CAAGD,UAAZ,CAA0B,CAA9B,CAAiC,CAC7B,MAAO,EAAP,CACH,CACD,GAAMI,CAAAA,cAAc,CAAGL,SAAS,CAACZ,KAAD,CAAQa,UAAR,CAAoBA,UAAU,CAAGX,IAAjC,CAAhC,CACA,GAAMgB,CAAAA,eAAe,CAAGN,SAAS,CAACZ,KAAD,CAAQa,UAAU,CAAGX,IAAb,CAAoB,CAA5B,CAA+BY,QAA/B,CAAjC,CACA,GAAMK,CAAAA,eAAe,CAAGpB,KAAK,CAACC,KAAD,CAAQa,UAAR,CAAoBX,IAApB,CAA0BY,QAA1B,CAA7B,CACA,mCAAWG,cAAX,qBAA8BC,eAA9B,qBAAkDC,eAAlD,GAEH,CAED,cAAeP,CAAAA,SAAf","sourcesContent":["function merge(array, start, half, end) {\n    var animations = []\n    var leftPosition = start;\n    var rightPosition = start + half + 1;\n    animations.push([\"check\", leftPosition, rightPosition]);\n    while (rightPosition <= end && leftPosition < rightPosition) {\n        if (array[leftPosition].props.value <= array[rightPosition].props.value) {\n            animations.push([\"uncheck-check\", leftPosition, leftPosition+1]);\n            leftPosition++;\n        } else {\n            // Shift right and insert element\n            // Grab element\n            const movedElement = array.splice(rightPosition, 1)\n            // Place in new position\n            array.splice(leftPosition, 0, movedElement[0]);\n            // animations.push([\"swap-wrong\", leftPosition, leftPosition]);\n            animations.push(['shift', leftPosition, rightPosition]);\n            if (rightPosition+1 > end) {\n                animations.push([\"uncheck-check\", leftPosition, rightPosition]);\n            } else {\n                animations.push([\"uncheck-check\", leftPosition, rightPosition+1]);\n            }\n            leftPosition++;\n            rightPosition++;\n        }\n    }\n    animations.push([\"uncheck\", leftPosition, rightPosition-1]);\n    return animations;\n}\n\nfunction mergeSort(array, startIndex, endIndex) {\n    const half = Math.floor((endIndex - startIndex) / 2);\n\n    if ((endIndex - startIndex) < 1) {\n        return [];\n    }\n    const leftAnimations = mergeSort(array, startIndex, startIndex + half);\n    const rightAnimations = mergeSort(array, startIndex + half + 1, endIndex);\n    const mergeAnimations = merge(array, startIndex, half, endIndex);\n    return [...leftAnimations, ...rightAnimations, ...mergeAnimations];\n\n}\n\nexport default mergeSort;"]},"metadata":{},"sourceType":"module"}